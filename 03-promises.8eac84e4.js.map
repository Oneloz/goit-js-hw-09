{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEAC,EAAAF,GAASG,OAAOC,KAAK,CACpBC,MAAO,QACPC,SAAU,YACVC,kBAAmB,OACnBC,qBAAsB,IACtBC,SAAU,OACVC,QAAS,KAkCV,SAASC,EAAcL,EAAUM,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAgB,C,SAAEV,E,MAAUM,GAElC,OAAO,IAAIK,SAAQ,CAACC,EAASC,KACvBN,GACFK,EAAQF,GAEVG,EAAOH,EAAc,G,CAvCZI,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,IAAIC,EAAQC,OAAOH,EAAMI,cAAcf,MAAMgB,OAC7C,MAAMC,EAAOH,OAAOH,EAAMI,cAAcE,KAAKD,OACvCE,EAASJ,OAAOH,EAAMI,cAAcG,OAAOF,OAEjD,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACtDpB,EAAcoB,EAAUN,GACrBO,MAAK,EAAC1B,SAAEA,EAAQM,MAAEA,MACjBqB,YAAW,KACR/B,EAAAF,GAASG,OAAO+B,QAAQ,uBAAqB5B,QAAiBM,MAAW,CACrEuB,SAAO,GACV,GACDvB,EAAM,IAEVwB,OAAM,EAAC9B,SAAEA,EAAQM,MAAEA,MAClBqB,YAAW,KACT/B,EAAAF,GAASG,OAAOkC,QAAQ,sBAAoB/B,QAAeM,MAAW,CACpEuB,SAAS,GACT,GACDvB,EAAM,IAEba,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({\n width: '270px',\n position: 'right-top',\n cssAnimationStyle: 'zoom',\n cssAnimationDuration: 450,\n distance: '45px',\n opacity: 0.7,\n});\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  let delay = Number(event.currentTarget.delay.value);\n  const step = Number(event.currentTarget.step.value);\n  const amount = Number(event.currentTarget.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n   createPromise(position, delay)\n     .then(({ position, delay }) => {\n       setTimeout(() => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n            useIcon: false,\n         });\n       }, delay);\n     })\n     .catch(({ position, delay }) => {\n       setTimeout(() => {\n         Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n           useIcon: false,\n         });\n       }, delay);\n     });\n   delay += step;\n }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const objectPromise = { position, delay };\n\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(objectPromise);\n    }\n    reject(objectPromise);\n  });\n}"],"names":["$7Y9D8","parcelRequire","$parcel$interopDefault","Notify","init","width","position","cssAnimationStyle","cssAnimationDuration","distance","opacity","$47d4ff9957288465$var$createPromise","delay","shouldResolve","Math","random","objectPromise","Promise","resolve","reject","document","querySelector","addEventListener","event","preventDefault","delay1","Number","currentTarget","value","step","amount","position1","then","setTimeout","success","useIcon","catch","failure"],"version":3,"file":"03-promises.8eac84e4.js.map"}