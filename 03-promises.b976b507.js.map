{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA0CA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAgB,CAAEL,WAAUC,SAElC,OAAO,IAAIK,SAAQ,SAACC,EAASC,GACvBN,GACFK,EAAQF,GAEVG,EAAOH,E,IAhDXI,EAAAZ,GAASa,OAAOC,KAAK,CACpBC,MAAO,QACPZ,SAAU,YACVa,kBAAmB,OACnBC,qBAAsB,IACtBC,SAAU,OACVC,QAAS,KAGGC,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAMN,IAJA,IAAIC,EAAQC,OAAOH,EAAMI,cAAcvB,MAAMwB,OACvCC,EAAOH,OAAOH,EAAMI,cAAcE,KAAKD,OACvCE,EAASJ,OAAOH,EAAMI,cAAcG,OAAOF,OAExCG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACtD7B,EAAc6B,EAAUN,GACrBO,MAAK,SAAAC,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MACjB8B,YAAW,WACRtB,EAAAZ,GAASa,OAAOsB,QAAQ,uBAAwCC,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,MAAK,CACvEiC,SAAO,G,GAEXjC,E,IAEJkC,OAAM,SAAAL,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MAClB8B,YAAW,WACTtB,EAAAZ,GAASa,OAAO0B,QAAQ,sBAAqCH,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,MAAK,CACtEiC,SAAS,G,GAEVjC,E,IAEPqB,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({\n width: '270px',\n position: 'right-top',\n cssAnimationStyle: 'zoom',\n cssAnimationDuration: 450,\n distance: '45px',\n opacity: 0.7,\n});\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  let delay = Number(event.currentTarget.delay.value);\n  const step = Number(event.currentTarget.step.value);\n  const amount = Number(event.currentTarget.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n   createPromise(position, delay)\n     .then(({ position, delay }) => {\n       setTimeout(() => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n            useIcon: false,\n         });\n       }, delay);\n     })\n     .catch(({ position, delay }) => {\n       setTimeout(() => {\n         Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n           useIcon: false,\n         });\n       }, delay);\n     });\n   delay += step;\n }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const objectPromise = { position, delay };\n\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(objectPromise);\n    }\n    reject(objectPromise);\n  });\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","objectPromise","Promise","resolve","reject","$parcel$interopDefault","Notify","init","width","cssAnimationStyle","cssAnimationDuration","distance","opacity","document","querySelector","addEventListener","event","preventDefault","delay1","Number","currentTarget","value","step","amount","position1","then","param","setTimeout","success","concat","useIcon","catch","failure"],"version":3,"file":"03-promises.b976b507.js.map"}